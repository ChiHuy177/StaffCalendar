// <auto-generated />
using System;
using CalendarWebsite.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalendarWebsite.Server.Migrations
{
    [DbContext(typeof(UserDataContext))]
    [Migration("20250610085713_AddEventAttachments")]
    partial class AddEventAttachments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CalendarWebsite.Server.Models.CalendarEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("MeetingRoomId")
                        .HasColumnType("bigint");

                    b.Property<string>("RecurrentType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("MeetingRoomId");

                    b.ToTable("CalendarEvents", "dbo");
                });

            modelBuilder.Entity("CalendarWebsite.Server.Models.CustomWorkingTime", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double?>("AfternoonEnd")
                        .HasColumnType("float");

                    b.Property<double?>("AfternoonStart")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MorningEnd")
                        .HasColumnType("float");

                    b.Property<double?>("MorningStart")
                        .HasColumnType("float");

                    b.Property<long>("PersonalProfileId")
                        .HasColumnType("bigint");

                    b.Property<long>("WorkweekId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("CustomWorkingTime", "dbo");
                });

            modelBuilder.Entity("CalendarWebsite.Server.Models.DataOnly_APIaCheckIn", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("At")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Check")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EarlyIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EarlyOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("LateIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LateOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Method")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("OutAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserWorkflowId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Wt")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DataOnly_APIaCheckIn", "Dynamic");
                });

            modelBuilder.Entity("CalendarWebsite.Server.Models.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeptLevel")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HOD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HSSEOrder")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHSSE")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ManagerId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department", "dbo");
                });

            modelBuilder.Entity("CalendarWebsite.Server.Models.EventAttachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EventId")
                        .HasColumnType("bigint");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventAttachments");
                });

            modelBuilder.Entity("CalendarWebsite.Server.Models.EventAttendee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("ApprovalStatus")
                        .HasColumnType("bit");

                    b.Property<long>("EventId")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonalProfileId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PersonalProfileId");

                    b.ToTable("EventAttendee", "dbo");
                });

            modelBuilder.Entity("CalendarWebsite.Server.Models.LeaveRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BoPhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DenNgay")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KPI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiPhepNam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayVaoLam")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayYeuCau")
                        .HasColumnType("datetime2");

                    b.Property<string>("NghiPhep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiDeNghi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureImageRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TongSoNgayNghi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("TuNgay")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserWorkflowId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Data_HCQĐ07BM01", "Dynamic");
                });

            modelBuilder.Entity("CalendarWebsite.Server.Models.MeetingRoom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MeetingRoom", "dbo");
                });

            modelBuilder.Entity("CalendarWebsite.Server.Models.PersonalProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AuthorizeAutomaticDigitalSigningEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("CalendarChecked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalendarColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalendarResourceChecked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalendarResourceSelected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalendarUserFillter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CoverImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("CoverImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DailyView")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfHire")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EnableEmail")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableNotification")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableSignature")
                        .HasColumnType("bit");

                    b.Property<string>("FlashSignatureImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAllowedToUseTheCompanysDigitalSignature")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDarkMode")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IsSyncCalendar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastPasswordChanged")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ManagerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthlyView")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PositionId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ShowEventTheme")
                        .HasColumnType("bit");

                    b.Property<string>("SignatureEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignaturePassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubDepartmentIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ThumbnailImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("ThumbnailImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int?>("UserLevel")
                        .HasColumnType("int");

                    b.Property<long?>("UserPosition")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserStatus")
                        .HasColumnType("int");

                    b.Property<string>("WeeklyView")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonalProfile", "dbo");
                });

            modelBuilder.Entity("CalendarWebsite.Server.Models.Workweek", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullTime")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkWeek", "dbo");
                });

            modelBuilder.Entity("CalendarWebsite.Server.Models.CalendarEvent", b =>
                {
                    b.HasOne("CalendarWebsite.Server.Models.MeetingRoom", "MeetingRoom")
                        .WithMany()
                        .HasForeignKey("MeetingRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeetingRoom");
                });

            modelBuilder.Entity("CalendarWebsite.Server.Models.EventAttachment", b =>
                {
                    b.HasOne("CalendarWebsite.Server.Models.CalendarEvent", "CalendarEvent")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CalendarEvent");
                });

            modelBuilder.Entity("CalendarWebsite.Server.Models.EventAttendee", b =>
                {
                    b.HasOne("CalendarWebsite.Server.Models.CalendarEvent", "CalendarEvent")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalendarWebsite.Server.Models.PersonalProfile", "PersonalProfile")
                        .WithMany()
                        .HasForeignKey("PersonalProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CalendarEvent");

                    b.Navigation("PersonalProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
